/*
 * Copyright 2023 Stanislav Mikhailov (xavetar)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

use super::{
    hours::{HOURS_IN_A_DAY},
    minutes::{MINUTES_IN_HOUR},
    year::{BASE_DAYS_YEAR, LEAP_DAYS_YEAR},
    months::{BASE_MONTH_DAYS, LEAP_MONTH_DAYS, MONTHS_IN_YEAR}
};

pub const SECONDS_IN_MINUTE: u128 = 60;
pub const SECONDS_IN_HOUR: u128 = SECONDS_IN_MINUTE * (MINUTES_IN_HOUR as u128);
pub const SECONDS_IN_DAY: u128 = SECONDS_IN_HOUR * (HOURS_IN_A_DAY as u128);

pub const CALENDAR_LEAP_SECONDS_IN_LEAP_YEAR: u128 = SECONDS_IN_DAY;
pub const CALENDAR_SECONDS_IN_YEAR: u128 = SECONDS_IN_DAY * (BASE_DAYS_YEAR as u128);
pub const CALENDAR_SECONDS_IN_LEAP_YEAR: u128 = SECONDS_IN_DAY * (LEAP_DAYS_YEAR as u128);

pub const BASE_MONTH_SECONDS: [u128; MONTHS_IN_YEAR as usize] = [
    (BASE_MONTH_DAYS[0] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[1] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[2] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[3] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[4] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[5] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[6] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[7] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[8] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[9] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[10] as u128) * SECONDS_IN_DAY,
    (BASE_MONTH_DAYS[11] as u128) * SECONDS_IN_DAY,
];

pub const LEAP_MONTH_SECONDS: [u128; MONTHS_IN_YEAR as usize] = [
    (LEAP_MONTH_DAYS[0] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[1] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[2] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[3] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[4] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[5] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[6] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[7] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[8] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[9] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[10] as u128) * SECONDS_IN_DAY,
    (LEAP_MONTH_DAYS[11] as u128) * SECONDS_IN_DAY,
];

pub const BASE_MONTH_SUM_SECONDS: [u128; MONTHS_IN_YEAR as usize] = [
    BASE_MONTH_SECONDS[0],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4] + BASE_MONTH_SECONDS[5],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4] + BASE_MONTH_SECONDS[5] + BASE_MONTH_SECONDS[6],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4] + BASE_MONTH_SECONDS[5] + BASE_MONTH_SECONDS[6] + BASE_MONTH_SECONDS[7],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4] + BASE_MONTH_SECONDS[5] + BASE_MONTH_SECONDS[6] + BASE_MONTH_SECONDS[7] + BASE_MONTH_SECONDS[8],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4] + BASE_MONTH_SECONDS[5] + BASE_MONTH_SECONDS[6] + BASE_MONTH_SECONDS[7] + BASE_MONTH_SECONDS[8] + BASE_MONTH_SECONDS[9],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4] + BASE_MONTH_SECONDS[5] + BASE_MONTH_SECONDS[6] + BASE_MONTH_SECONDS[7] + BASE_MONTH_SECONDS[8] + BASE_MONTH_SECONDS[9] + BASE_MONTH_SECONDS[10],
    BASE_MONTH_SECONDS[0] + BASE_MONTH_SECONDS[1] + BASE_MONTH_SECONDS[2] + BASE_MONTH_SECONDS[3] + BASE_MONTH_SECONDS[4] + BASE_MONTH_SECONDS[5] + BASE_MONTH_SECONDS[6] + BASE_MONTH_SECONDS[7] + BASE_MONTH_SECONDS[8] + BASE_MONTH_SECONDS[9] + BASE_MONTH_SECONDS[10] + BASE_MONTH_SECONDS[11],
];

pub const LEAP_MONTH_SUM_SECONDS: [u128; MONTHS_IN_YEAR as usize] = [
    LEAP_MONTH_SECONDS[0],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4] + LEAP_MONTH_SECONDS[5],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4] + LEAP_MONTH_SECONDS[5] + LEAP_MONTH_SECONDS[6],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4] + LEAP_MONTH_SECONDS[5] + LEAP_MONTH_SECONDS[6] + LEAP_MONTH_SECONDS[7],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4] + LEAP_MONTH_SECONDS[5] + LEAP_MONTH_SECONDS[6] + LEAP_MONTH_SECONDS[7] + LEAP_MONTH_SECONDS[8],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4] + LEAP_MONTH_SECONDS[5] + LEAP_MONTH_SECONDS[6] + LEAP_MONTH_SECONDS[7] + LEAP_MONTH_SECONDS[8] + LEAP_MONTH_SECONDS[9],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4] + LEAP_MONTH_SECONDS[5] + LEAP_MONTH_SECONDS[6] + LEAP_MONTH_SECONDS[7] + LEAP_MONTH_SECONDS[8] + LEAP_MONTH_SECONDS[9] + LEAP_MONTH_SECONDS[10],
    LEAP_MONTH_SECONDS[0] + LEAP_MONTH_SECONDS[1] + LEAP_MONTH_SECONDS[2] + LEAP_MONTH_SECONDS[3] + LEAP_MONTH_SECONDS[4] + LEAP_MONTH_SECONDS[5] + LEAP_MONTH_SECONDS[6] + LEAP_MONTH_SECONDS[7] + LEAP_MONTH_SECONDS[8] + LEAP_MONTH_SECONDS[9] + LEAP_MONTH_SECONDS[10] + LEAP_MONTH_SECONDS[11],
];